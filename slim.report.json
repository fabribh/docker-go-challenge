{
  "version": "1.1",
  "engine": "linux|Transformer|1.40.0|a4bb798922820523fceedb9121f5bcfdfc9f2901|2023-01-15_09:42:23PM",
  "containerized": false,
  "host_distro": {
    "name": "Ubuntu",
    "version": "22.04",
    "display_name": "Ubuntu 22.04 LTS"
  },
  "type": "build",
  "state": "done",
  "target_reference": "fabribh/golang:latest",
  "system": {
    "type": "",
    "release": "",
    "distro": {
      "name": "",
      "version": "",
      "display_name": ""
    }
  },
  "source_image": {
    "identity": {
      "id": "sha256:87cd602eaaf9b12c928b2384fddffa13a930ba68169c165cf331e4ed40abcabd",
      "tags": [
        "latest"
      ],
      "names": [
        "fabribh/golang:latest"
      ]
    },
    "size": 355176856,
    "size_human": "355 MB",
    "create_time": "2023-01-25T22:57:26Z",
    "docker_version": "20.10.18",
    "architecture": "amd64",
    "os": "linux",
    "env_vars": [
      "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
      "GOLANG_VERSION=1.19.5",
      "GOPATH=/go"
    ],
    "container_entry": {
      "exe_path": ""
    }
  },
  "minified_image_size": 1646220,
  "minified_image_size_human": "1.6 MB",
  "minified_image": "fabribh/golang.slim",
  "minified_image_has_data": true,
  "minified_by": 215.75297104882702,
  "artifact_location": "/tmp/slim-state/.slim-state/images/87cd602eaaf9b12c928b2384fddffa13a930ba68169c165cf331e4ed40abcabd/artifacts",
  "container_report_name": "creport.json",
  "seccomp_profile_name": "fabribh-golang-seccomp.json",
  "apparmor_profile_name": "fabribh-golang-apparmor-profile",
  "image_stack": [
    {
      "is_top_image": false,
      "id": "sha256:feb4bbda921c3f51bc84ae6f12414c53189d33e193e37d930b4a44076b7fb348",
      "full_name": "golang:1.19-alpine",
      "repo_name": "golang",
      "version_tag": "1.19-alpine",
      "raw_tags": [
        "golang:1.19-alpine"
      ],
      "create_time": "2023-01-11T00:00:02Z",
      "new_size": 353817338,
      "new_size_human": "354 MB",
      "instructions": [
        {
          "type": "ADD",
          "time": "2023-01-09T17:05:20Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 7049701,
          "size_human": "7.0 MB",
          "params": "file:e4d600fc4c9c293efe360be7b30ee96579925d1b4634c94332e2ec73f7d8eca1 in /",
          "command_snippet": "ADD file:e4d600fc4c9c293efe360be7b30ee965799...",
          "command_all": "ADD file:e4d600fc4c9c293efe360be7b30ee96579925d1b4634c94332e2ec73f7d8eca1 /",
          "target": "/",
          "source_type": "file",
          "inst_set_time_bucket": "2023-01-09T14:00:00-03:00"
        },
        {
          "type": "CMD",
          "time": "2023-01-09T17:05:20Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/bin/sh\"]\n",
          "command_snippet": "CMD [\"/bin/sh\"]\n",
          "command_all": "CMD [\"/bin/sh\"]\n",
          "inst_set_time_bucket": "2023-01-09T14:00:00-03:00"
        },
        {
          "type": "RUN",
          "time": "2023-01-09T17:50:11Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 519585,
          "size_human": "520 kB",
          "command_snippet": "RUN apk add --no-cache ca-certificates",
          "command_all": "RUN apk add --no-cache ca-certificates",
          "system_commands": [
            "apk add --no-cache ca-certificates"
          ],
          "inst_set_time_bucket": "2023-01-09T14:45:00-03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-01-09T17:50:11Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "command_snippet": "ENV PATH=/usr/local/go/bin:/usr/local/sbin:/...",
          "command_all": "ENV PATH=/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "inst_set_time_bucket": "2023-01-09T14:45:00-03:00",
          "inst_set_time_index": 1
        },
        {
          "type": "ENV",
          "time": "2023-01-10T23:58:23Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "GOLANG_VERSION=1.19.5",
          "command_snippet": "ENV GOLANG_VERSION=1.19.5",
          "command_all": "ENV GOLANG_VERSION=1.19.5",
          "inst_set_time_bucket": "2023-01-10T20:45:00-03:00",
          "inst_set_time_index": 2
        },
        {
          "type": "RUN",
          "time": "2023-01-11T00:00:00Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 346248052,
          "size_human": "346 MB",
          "command_snippet": "RUN set -eux; \tapk add --no-cache --virtual ...",
          "command_all": "RUN set -eux; \tapk add --no-cache --virtual .fetch-deps gnupg; \tarch=\"$(apk --print-arch)\"; \turl=; \tcase \"$arch\" in \t\t'x86_64') \t\t\texport GOAMD64='v1' GOARCH='amd64' GOOS='linux'; \t\t\t;; \t\t'armhf') \t\t\texport GOARCH='arm' GOARM='6' GOOS='linux'; \t\t\t;; \t\t'armv7') \t\t\texport GOARCH='arm' GOARM='7' GOOS='linux'; \t\t\t;; \t\t'aarch64') \t\t\texport GOARCH='arm64' GOOS='linux'; \t\t\t;; \t\t'x86') \t\t\texport GO386='softfloat' GOARCH='386' GOOS='linux'; \t\t\t;; \t\t'ppc64le') \t\t\texport GOARCH='ppc64le' GOOS='linux'; \t\t\t;; \t\t's390x') \t\t\texport GOARCH='s390x' GOOS='linux'; \t\t\t;; \t\t*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"; exit 1 ;; \tesac; \tbuild=; \tif [ -z \"$url\" ]; then \t\tbuild=1; \t\turl='https://dl.google.com/go/go1.19.5.src.tar.gz'; \t\tsha256='8e486e8e85a281fc5ce3f0bedc5b9d2dbf6276d7db0b25d3ec034f313da0375f'; \tfi; \t\twget -O go.tgz.asc \"$url.asc\"; \twget -O go.tgz \"$url\"; \techo \"$sha256 *go.tgz\" | sha256sum -c -; \t\tGNUPGHOME=\"$(mktemp -d)\"; export GNUPGHOME; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \tgpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \tgpg --batch --verify go.tgz.asc go.tgz; \tgpgconf --kill all; \trm -rf \"$GNUPGHOME\" go.tgz.asc; \t\ttar -C /usr/local -xzf go.tgz; \trm go.tgz; \t\tif [ -n \"$build\" ]; then \t\tapk add --no-cache --virtual .build-deps \t\t\tbash \t\t\tgcc \t\t\tgo \t\t\tmusl-dev \t\t; \t\t\t\texport GOCACHE='/tmp/gocache'; \t\t\t\t( \t\t\tcd /usr/local/go/src; \t\t\texport GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"; \t\t\tif [ \"${GOARCH:-}\" = '386' ]; then \t\t\t\texport CGO_CFLAGS='-fno-stack-protector'; \t\t\tfi; \t\t\t./make.bash; \t\t); \t\t\t\tapk del --no-network .build-deps; \t\t\t\trm -rf \t\t\t/usr/local/go/pkg/*/cmd \t\t\t/usr/local/go/pkg/bootstrap \t\t\t/usr/local/go/pkg/obj \t\t\t/usr/local/go/pkg/tool/*/api \t\t\t/usr/local/go/pkg/tool/*/go_bootstrap \t\t\t/usr/local/go/src/cmd/dist/dist \t\t\t\"$GOCACHE\" \t\t; \tfi; \t\tapk del --no-network .fetch-deps; \t\tgo version",
          "system_commands": [
            "set -eux",
            "apk add --no-cache --virtual .fetch-deps gnupg",
            "arch=\"$(apk --print-arch)\"",
            "url=",
            "case \"$arch\" in 'x86_64') export GOAMD64='v1' GOARCH='amd64' GOOS='linux'",
            "",
            "",
            "'armhf') export GOARCH='arm' GOARM='6' GOOS='linux'",
            "",
            "",
            "'armv7') export GOARCH='arm' GOARM='7' GOOS='linux'",
            "",
            "",
            "'aarch64') export GOARCH='arm64' GOOS='linux'",
            "",
            "",
            "'x86') export GO386='softfloat' GOARCH='386' GOOS='linux'",
            "",
            "",
            "'ppc64le') export GOARCH='ppc64le' GOOS='linux'",
            "",
            "",
            "'s390x') export GOARCH='s390x' GOOS='linux'",
            "",
            "",
            "*) echo >&2 \"error: unsupported architecture '$arch' (likely packaging update needed)\"",
            "exit 1",
            "",
            "esac",
            "build=",
            "if [ -z \"$url\" ]",
            "then build=1",
            "url='https://dl.google.com/go/go1.19.5.src.tar.gz'",
            "sha256='8e486e8e85a281fc5ce3f0bedc5b9d2dbf6276d7db0b25d3ec034f313da0375f'",
            "fi",
            "wget -O go.tgz.asc \"$url.asc\"",
            "wget -O go.tgz \"$url\"",
            "echo \"$sha256 *go.tgz\" | sha256sum -c -",
            "GNUPGHOME=\"$(mktemp -d)\"",
            "export GNUPGHOME",
            "gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'",
            "gpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'",
            "gpg --batch --verify go.tgz.asc go.tgz",
            "gpgconf --kill all",
            "rm -rf \"$GNUPGHOME\" go.tgz.asc",
            "tar -C /usr/local -xzf go.tgz",
            "rm go.tgz",
            "if [ -n \"$build\" ]",
            "then apk add --no-cache --virtual .build-deps bash gcc go musl-dev",
            "export GOCACHE='/tmp/gocache'",
            "( cd /usr/local/go/src",
            "export GOROOT_BOOTSTRAP=\"$(go env GOROOT)\" GOHOSTOS=\"$GOOS\" GOHOSTARCH=\"$GOARCH\"",
            "if [ \"${GOARCH:-}\" = '386' ]",
            "then export CGO_CFLAGS='-fno-stack-protector'",
            "fi",
            "./make.bash",
            ")",
            "apk del --no-network .build-deps",
            "rm -rf /usr/local/go/pkg/*/cmd /usr/local/go/pkg/bootstrap /usr/local/go/pkg/obj /usr/local/go/pkg/tool/*/api /usr/local/go/pkg/tool/*/go_bootstrap /usr/local/go/src/cmd/dist/dist \"$GOCACHE\"",
            "fi",
            "apk del --no-network .fetch-deps",
            "go version"
          ],
          "inst_set_time_bucket": "2023-01-10T21:00:00-03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "ENV",
          "time": "2023-01-11T00:00:01Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "GOPATH=/go",
          "command_snippet": "ENV GOPATH=/go",
          "command_all": "ENV GOPATH=/go",
          "inst_set_time_bucket": "2023-01-10T21:00:00-03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "ENV",
          "time": "2023-01-11T00:00:01Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "command_snippet": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/loca...",
          "command_all": "ENV PATH=/go/bin:/usr/local/go/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
          "inst_set_time_bucket": "2023-01-10T21:00:00-03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "RUN",
          "time": "2023-01-11T00:00:02Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && ...",
          "command_all": "RUN mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\" && \\\n\tchmod -R 777 \"$GOPATH\"",
          "system_commands": [
            "mkdir -p \"$GOPATH/src\" \"$GOPATH/bin\"",
            "chmod -R 777 \"$GOPATH\""
          ],
          "inst_set_time_bucket": "2023-01-10T21:00:00-03:00",
          "inst_set_time_index": 3
        },
        {
          "type": "WORKDIR",
          "time": "2023-01-11T00:00:02Z",
          "is_last_instruction": true,
          "is_nop": true,
          "local_image_exists": true,
          "layer_index": 0,
          "size": 0,
          "params": "/go",
          "command_snippet": "WORKDIR /go",
          "command_all": "WORKDIR /go",
          "system_commands": [
            "mkdir -p /go"
          ],
          "raw_tags": [
            "golang:1.19-alpine"
          ],
          "inst_set_time_bucket": "2023-01-10T21:00:00-03:00",
          "inst_set_time_index": 3
        }
      ]
    },
    {
      "is_top_image": true,
      "id": "sha256:87cd602eaaf9b12c928b2384fddffa13a930ba68169c165cf331e4ed40abcabd",
      "full_name": "fabribh/golang:latest",
      "repo_name": "fabribh/golang",
      "version_tag": "latest",
      "raw_tags": [
        "fabribh/golang:latest"
      ],
      "create_time": "2023-01-25T22:57:26Z",
      "new_size": 1359518,
      "new_size_human": "1.4 MB",
      "base_image_id": "sha256:feb4bbda921c3f51bc84ae6f12414c53189d33e193e37d930b4a44076b7fb348",
      "instructions": [
        {
          "type": "WORKDIR",
          "time": "2023-01-25T22:53:34Z",
          "is_nop": true,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:5ccb15e83a374d7a726e5d6bd78e4ad90af36c87481b7970cd8263bcc75b497b",
          "layer_index": 0,
          "size": 0,
          "params": "/go/src/smallest-goland/app",
          "command_snippet": "WORKDIR /go/src/smallest-goland/app",
          "command_all": "WORKDIR /go/src/smallest-goland/app",
          "system_commands": [
            "mkdir -p /go/src/smallest-goland/app"
          ],
          "inst_set_time_bucket": "2023-01-25T19:45:00-03:00",
          "inst_set_time_index": 4
        },
        {
          "type": "COPY",
          "time": "2023-01-25T22:57:23Z",
          "is_nop": true,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:7c88d89b80fb8710d314cf321a8cff3fbb1a8324cb4167757da5eecfd989096a",
          "layer_index": 0,
          "size": 43850,
          "size_human": "44 kB",
          "params": "dir:c8ce7c133ff35043561b6c1ebc392a9ee496c15f7de57a0efa08ee37fe623d68 in .",
          "command_snippet": "COPY dir:c8ce7c133ff35043561b6c1ebc392a9ee49...",
          "command_all": "COPY dir:c8ce7c133ff35043561b6c1ebc392a9ee496c15f7de57a0efa08ee37fe623d68 .",
          "target": ".",
          "source_type": "dir",
          "inst_set_time_bucket": "2023-01-25T19:45:00-03:00",
          "inst_set_time_index": 4
        },
        {
          "type": "RUN",
          "time": "2023-01-25T22:57:24Z",
          "is_nop": false,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:bf24d1df5f3753f7780a3f2dcc32196929553205eb33c9902bbffc9990b0c3fa",
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN go mod download",
          "command_all": "RUN go mod download",
          "system_commands": [
            "go mod download"
          ],
          "inst_set_time_bucket": "2023-01-25T19:45:00-03:00",
          "inst_set_time_index": 4
        },
        {
          "type": "RUN",
          "time": "2023-01-25T22:57:25Z",
          "is_nop": false,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:d81ef0382b9b749463d9bc0f9c8642243e871d4ae9e20a5ba5509b66361bae6a",
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN go mod verify",
          "command_all": "RUN go mod verify",
          "system_commands": [
            "go mod verify"
          ],
          "inst_set_time_bucket": "2023-01-25T19:45:00-03:00",
          "inst_set_time_index": 4
        },
        {
          "type": "RUN",
          "time": "2023-01-25T22:57:26Z",
          "is_nop": false,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:4f3a0bafaed03134734872dea29078f57f8f545a114417015158fdc542afabcd",
          "layer_index": 0,
          "size": 1315668,
          "size_human": "1.3 MB",
          "command_snippet": "RUN go build -o /main .",
          "command_all": "RUN go build -o /main .",
          "system_commands": [
            "go build -o /main ."
          ],
          "inst_set_time_bucket": "2023-01-25T19:45:00-03:00",
          "inst_set_time_index": 4
        },
        {
          "type": "CMD",
          "time": "2023-01-25T22:57:26Z",
          "is_last_instruction": true,
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": true,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/main\"]\n",
          "command_snippet": "CMD [\"/main\"]\n",
          "command_all": "CMD [\"/main\"]\n",
          "raw_tags": [
            "fabribh/golang:latest"
          ],
          "inst_set_time_bucket": "2023-01-25T19:45:00-03:00",
          "inst_set_time_index": 4
        }
      ]
    }
  ],
  "image_created": true,
  "image_build_engine": "docker"
}
